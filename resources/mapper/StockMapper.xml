<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.great.dao.StockMapper">

<!-- 删除stock_number=0的这一行 -->
<delete id="delRow" parameterType="int">
	delete FROM t_stock where stock_id=#{stock_id}
</delete>

<!-- 通过drug_id,birthday,factory_id定位到药库药品表拥有该三个字段的stock_id和stock_number的集合 -->
<select id="getIDs" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select stock_id,stock_number from t_stock 
	where factory_id=#{factory_id} and drug_id=#{drug_id} and to_char(birthday,'YYYY-MM-DD')=#{birthday}
	order by stock_id
</select>


<!-- 把获取的值通过drug_id,birthday,factory_id定位到药库药品表的某一行的值减少drug_number数量 -->
<update id="updateByApply" parameterType="java.util.HashMap">
	update t_stock set stock_number=stock_number-#{drug_number} 
	where stock_id=#{stock_id}
</update>


<!-- 通过drug_id，factory_id,birthday查询药库库存表中该药品的库存总量-->
<select id="getDrugNum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select sum(stock_number) stock_number FROM t_stock 
	where factory_id=#{factory_id} and drug_id=#{drug_id} and to_char(birthday,'YYYY-MM-DD')=#{birthday}
</select>

<!-- 通过drug_id，factory_id查询药库库存表中该药品的生产日期-->
<select id="getByDrugIdAndFactoryId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select distinct to_char(birthday,'YYYY-MM-DD') birthday FROM t_stock 
	where factory_id=#{factory_id} and drug_id=#{drug_id} order by birthday
</select>

<!-- 通过药库的全部药品名称 -->
<select id="getAllDrugName" resultType="java.util.HashMap">
	select distinct b.drug_name,a.drug_id from t_stock a,t_drug b
	where a.drug_id=b.drug_id
</select>

<!-- 通过drug_id查询药库库存表中该药品的厂家 -->
<select id="getMegByDrugId" parameterType="int" resultType="java.util.HashMap">
	select distinct c.factory_name,a.factory_id, b.psychotropics from t_stock a,t_drug b,t_factory c
	where a.drug_id=b.drug_id and a.factory_id=c.factory_id and a.drug_id=#{0}
</select>

<!-- 通过drug_id查询药库库存表中该ID的库存量 -->
<select id="drugNumById" parameterType="int" resultType="int">
	select sum(stock_number) allnumber from t_stock where drug_id=#{0}
</select>


<!-- 获取这半年的采购药品名字及数量 -->
<select id="getHalfYear" resultType="java.util.HashMap">
	select b.drug_name, SUM(a.stock_number) count from t_stock a,t_drug b where a.drug_id=b.drug_id and a.state=1 and to_char(a.cdate,'YYYY-MM-DD') between to_char((select trunc(add_months(sysdate,-5),'mm') first_day from dual),'YYYY-MM-DD') and 
				 to_char((select last_day(add_months(sysdate,-0)) last_day from dual),'YYYY-MM-DD') group by b.drug_name
</select>

<!-- 获取这一周的采购药品名字及数量 -->
<select id="getWeek" resultType="java.util.HashMap">
	select B.drug_name, SUM(a.stock_number) count from t_stock a,t_drug b where a.drug_id=b.drug_id and a.state=1 and to_char(a.cdate,'YYYY-MM-DD') between to_char((select trunc(sysdate, 'iw') from dual),'YYYY-MM-DD') and 
				 to_char((select trunc(sysdate, 'iw')+6 from dual),'YYYY-MM-DD') group by B.drug_name
</select>

<!-- 获取这一个月的采购药品名字及数量 -->
<select id="getMonth" resultType="java.util.HashMap">
select B.drug_name, SUM(a.stock_number) count from t_stock a,t_drug b where a.drug_id=b.drug_id and a.state=1 and to_char(a.cdate,'YYYY-MM-DD') between to_char((select trunc(sysdate,'mm') from dual),'YYYY-MM-DD') and 
				 to_char((select last_day(sysdate) from dual),'YYYY-MM-DD') group by B.drug_name
</select>

<!-- 获取时间段内的采购药品名字及数量 -->
<select id="getOrdersByTime" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select b.drug_name, SUM(a.stock_number) count from t_stock a,t_drug b where a.drug_id=b.drug_id and a.state=1 and to_char(a.cdate,'YYYY-MM-DD') between #{start} and 
				 #{end} group by b.drug_name
</select>
<!-- 蒋亚福 得到药库的每种药品数量 -->
<select id="getStocks" parameterType="com.great.bean.Stock" resultType="com.great.bean.Drug">
	select  a.*,b.stock_number from 
     T_DRUG a,(select drug_id,sum(stock_number) stock_number from T_STOCK where state in (1,4)  group by drug_id) b 
      where a.drug_id=b.drug_id
</select>
<!-- 蒋亚福 效验药库药品数量是否足够 -->
<select id="checkStockNum" resultType="com.great.bean.Stock">
	 select a.*,b.drug_name,b.stock_min from 
	  (select drug_id,sum(stock_number) stock_number from  T_STOCK where state=1 group by drug_id) a,T_DRUG b 
	   where a.drug_id=b.drug_id 
</select>
<!-- 蒋亚福 效验药房药品数量是否足够 -->
<select id="checkInventoryNum" resultType="com.great.bean.Inventory">
	 select a.*,b.drug_name,b.inventory_min from 
	  (select drug_id,sum(inventory_number) inventory_number from  T_INVENTORY where state=1 group by drug_id) a right join T_DRUG b 
	   on a.drug_id=b.drug_id 
</select>
<!-- 蒋亚福 根据药品id得到药库的记录 进行退货操作 -->
<select id="getStocksByDrugId" parameterType="java.lang.Integer" resultType="com.great.bean.Stock"> 
	 select a.*,b.drug_name,c.parameter_name,d.admin_name,e.factory_name from T_STOCK a,T_DRUG b, T_PARAMETER c ,T_ADMIN d ,T_FACTORY e 
       where a.drug_id=#{_parameter} and a.drug_id=b.drug_id and c.parameter_type='药库库存状态' and c.parameter_value=a.state and a.admin_id=d.admin_id and a.factory_id = e.factory_id
       and a.state=1 order by a.cdate desc
</select>
<!-- 蒋亚福 插入数据库 药库 退货de -->
<insert id="returnGoodAdd" parameterType="com.great.bean.ReturnGood">
	insert into T_RETURN(stock_id,drug_id,stock_number,factory_id) 
	 values(#{stock_id},#{drug_id},#{stock_number},#{factory_id})
</insert>
<update id="deleteStateByStockId" parameterType="com.great.bean.ReturnGood">
	update t_stock set state=3 where stock_id = #{stock_id}
</update>
<!-- 蒋亚福 退货详情表 -->
<select id="getReturns" parameterType="com.great.bean.ReturnGood" resultType="com.great.bean.ReturnGood">
select a.*,b.drug_name,c.factory_name,d.parameter_name from t_return a,t_drug b,t_factory c,t_parameter d 
  where a.drug_id = b.drug_id and a.factory_id=c.factory_id and a.state = d.parameter_value and d.parameter_type='退工厂状态' order by a.return_date desc
</select>
<!-- 蒋亚福 撤回退货-->
<update id="revokeReturnGood" parameterType="com.great.bean.ReturnGood">
	update t_stock set state=1 where stock_id = #{stock_id}
</update>
<delete id="revokeReturnGood1" parameterType="com.great.bean.ReturnGood">
	delete from t_return where stock_id=#{stock_id}
</delete>
<!-- 蒋亚福 退货同意 -->
<update id="ReturnGoodPass" parameterType="com.great.bean.ReturnGood">
	update t_return set state=2 where stock_id = #{stock_id}
</update>
<!-- 蒋亚福 退货驳回 -->
<update id="ReturnGoodNotPass" parameterType="com.great.bean.ReturnGood">
	update t_return set state=3 where stock_id = #{stock_id}
</update>
	<!-- zsl 根据药品id增加药库库存 -->
	<insert id="addStockNum" parameterType="com.great.bean.Stock">
		INSERT INTO T_STOCK (STOCK_ID, DRUG_ID, STOCK_NUMBER, BIRTHDAY, STATE, CDATE, ADMIN_ID, FACTORY_ID) 
		VALUES (SEQ_T_STOCK.NEXTVAL, #{drug_id}, #{stock_number}, to_date('${birthday}','yyyy-MM-DD hh24:mi:ss'), 1, sysdate, #{admin_id}, #{factory_id})
	</insert>
	<!-- xsm  根据药库id得到药库的记录 进行退货操作的打印 表单 -->
	<select id="getStocksBystockId" parameterType="java.lang.Integer" resultType="com.great.bean.Stock"> 
	 select a.*,b.drug_name,c.parameter_name,d.admin_name,e.factory_name from T_STOCK a,T_DRUG b, T_PARAMETER c ,T_ADMIN d ,T_FACTORY e 
       where a.stock_id=#{_stock_id} and a.drug_id=b.drug_id and c.parameter_type='药库库存状态' and c.parameter_value=a.state and a.admin_id=d.admin_id and a.factory_id = e.factory_id

	</select>
	<!-- xsm  根据药库id得到药库的记录 进行退货操作的打印 表单 -->
	<select id="getStock"  resultType="com.great.bean.ReturnGood"> 
		select a.*,b.birthday,b.cdate, c.drug_name,d.admin_name,e.factory_name from T_return a ,T_stock b,T_drug c,T_admin d,T_factory e
		  where a.stock_id=b.stock_id and a.drug_id=c.drug_id and b.admin_id=d.admin_id and e.factory_id=b.factory_id
	</select>
</mapper>